name: Terraform Deploy to Azure Storage

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

jobs:
  terraform:
    name: Set up Azure Storage with Terraform
    runs-on: ubuntu-latest

    # Set environment variables for Terraform provider authentication
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Initialize Terraform
        working-directory: infra  # Run terraform from the infra directory
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform init

      - name: Apply Terraform
        id: apply
        working-directory: infra
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform apply -auto-approve

      - name: Capture Terraform Outputs
        id: output
        working-directory: infra
        run: |
          terraform output
          storage_account_name=$(terraform output -raw storage_account_name | tr -d '\n')
          static_website_url=$(terraform output -raw static_website_url | tr -d '\n')
          echo "storage_account_name=$storage_account_name" >> $GITHUB_ENV
          echo "static_website_url=$static_website_url" >> $GITHUB_ENV
        shell: bash

  deploy:
    name: Build and Deploy React App
    runs-on: ubuntu-latest
    needs: terraform  # Ensure this job waits for the terraform job to complete

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # Use the Node.js version matching your project

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: npm run build

      - name: Upload files to Azure Storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
            az storage blob upload-batch --account-name "${{ env.storage_account_name }}" -s ./build -d '$web'
      
      - name: Show Static Website URL
        run: echo "Your site is live"
